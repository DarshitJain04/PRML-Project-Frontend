{"version":3,"sources":["assets/Doctors1.png","App.js","reportWebVitals.js","index.js"],"names":["App","handleChange","event","setState","condition","target","value","console","log","state","handleClear","dataFlag","className","Grid","container","direction","justify","alignItems","spacing","style","width","height","margin","item","xs","sm","md","lg","Select","displayEmpty","this","onChange","MenuItem","disabled","id","onClick","handleSubmit","src","Doctor","alt","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAAe,MAA0B,qC,OCsF1BA,E,kDA9Ed,aAAe,IAAD,8BACb,gBAODC,aAAe,SAACC,GACf,EAAKC,SAAS,CAAEC,UAAWF,EAAMG,OAAOC,QAAS,kBAChDC,QAAQC,IAAI,EAAKC,MAAML,eAVX,EAcdM,YAAc,SAACR,GACd,EAAKC,SAAS,CAAEC,UAAW,KAAM,kBAAMG,QAAQC,IAAI,EAAKC,MAAML,eAb9D,EAAKK,MAAQ,CACZE,UAAU,EACVP,UAAW,IAJC,E,0CAkBd,WACC,OACC,sBAAKQ,UAAU,MAAf,UACC,oBAAIA,UAAU,UAAd,wCACA,qBAAKA,UAAU,UAAf,SACC,eAACC,EAAA,EAAD,CACCC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,QAAS,EACTC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,QANjD,UAQC,cAACT,EAAA,EAAD,CAAMU,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGR,MAAO,CAAEG,OAAQ,QAA1D,SACC,sBAAKV,UAAU,OAAf,UACC,mLAKA,eAACgB,EAAA,EAAD,CACCC,cAAY,EACZV,MAAO,CAAEC,MAAO,OAChBd,MAAOwB,KAAKrB,MAAML,UAClB2B,SAAUD,KAAK7B,aAJhB,UAMC,cAAC+B,EAAA,EAAD,CAAU1B,MAAM,GAAG2B,UAAQ,EAA3B,uBAGA,cAACD,EAAA,EAAD,CAAU1B,MAAO,SAAjB,oBACA,cAAC0B,EAAA,EAAD,CAAU1B,MAAO,aAAjB,wBACA,cAAC0B,EAAA,EAAD,CAAU1B,MAAO,WAAjB,sBACA,cAAC0B,EAAA,EAAD,CAAU1B,MAAO,gBAAjB,2BACA,cAAC0B,EAAA,EAAD,CAAU1B,MAAO,OAAjB,kBACA,cAAC0B,EAAA,EAAD,CAAU1B,MAAO,kBAAjB,gCAED,sBAAKM,UAAU,UAAf,UACC,wBAAQsB,GAAG,eAAeC,QAASL,KAAKM,aAAxC,oBAGA,wBAAQF,GAAG,cAAcC,QAASL,KAAKpB,YAAvC,2BAMH,cAACG,EAAA,EAAD,CAAMU,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGR,MAAO,CAAEG,OAAQ,QAA1D,SACGQ,KAAKrB,MAAME,SAGZ,sCAFA,qBAAK0B,IAAKC,EAAQ1B,UAAU,cAAc2B,IAAI,+B,GAnEpCC,aCKHC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.6884b43a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Doctors1.4b5526fa.png\";","import React, { Component } from 'react';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Doctor from './assets/Doctors1.png';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdataFlag: false,\n\t\t\tcondition: '',\n\t\t};\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({ condition: event.target.value }, () =>\n\t\t\tconsole.log(this.state.condition)\n\t\t);\n\t};\n\n\thandleClear = (event) => {\n\t\tthis.setState({ condition: '' }, () => console.log(this.state.condition));\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1 className=\"heading\">Pill Recommendation System</h1>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\tspacing={8}\n\t\t\t\t\t\tstyle={{ width: '100%', height: '100%', margin: 'auto' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid item xs={12} sm={12} md={6} lg={6} style={{ margin: 'auto' }}>\n\t\t\t\t\t\t\t<div className=\"form\">\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\tAnalyzing the drugs descriptions, conditions, reviews and then\n\t\t\t\t\t\t\t\t\trecommending it using Deep Learning Models, for each health\n\t\t\t\t\t\t\t\t\tcondition of a patient\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tdisplayEmpty\n\t\t\t\t\t\t\t\t\tstyle={{ width: '50%' }}\n\t\t\t\t\t\t\t\t\tvalue={this.state.condition}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MenuItem value=\"\" disabled>\n\t\t\t\t\t\t\t\t\t\tCondition\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={'Corona'}>Corona</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={'Depression'}>Depression</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={'Headache'}>Headache</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={'Birth Control'}>Birth Control</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={'ADHD'}>ADHD</MenuItem>\n\t\t\t\t\t\t\t\t\t<MenuItem value={'Frozen Shoulder'}>Frozen Shoulder</MenuItem>\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t\t\t\t<button id=\"submitButton\" onClick={this.handleSubmit}>\n\t\t\t\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button id=\"clearButton\" onClick={this.handleClear}>\n\t\t\t\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={12} md={6} lg={6} style={{ margin: 'auto' }}>\n\t\t\t\t\t\t\t{!this.state.dataFlag ? (\n\t\t\t\t\t\t\t\t<img src={Doctor} className=\"DoctorImage\" alt=\"Stay Safe ;)\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<h1>Data</h1>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}